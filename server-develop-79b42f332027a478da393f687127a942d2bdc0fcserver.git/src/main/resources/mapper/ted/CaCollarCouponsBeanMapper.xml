<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ted.resonance.mapper.CaCollarCouponsBeanMapper" >
  <resultMap id="BaseResultMap" type="com.ted.resonance.entity.CaCollarCouponsBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="draw_id" property="drawId" jdbcType="BIGINT"/>
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="tx_hash" property="txHash" jdbcType="VARCHAR" />
    <result column="addr" property="addr" jdbcType="VARCHAR" />
    <result column="pay_coin_type" property="payCoinType" jdbcType="VARCHAR" />
    <result column="pay_coin_nums" property="payCoinNums" jdbcType="DECIMAL" />
    <result column="pay_ted_nums" property="payTedNums" jdbcType="DECIMAL" />
    <result column="reward_coin_type" property="rewardCoinType" jdbcType="VARCHAR" />
    <result column="reward_coin_nums" property="rewardCoinNums" jdbcType="DECIMAL" />
    <result column="earning_rate" property="earningRate" jdbcType="DECIMAL" />
    <result column="reward_status" property="rewardStatus" jdbcType="CHAR" />
    <result column="reward_time" property="rewardTime" jdbcType="TIMESTAMP" />
    <result column="expires_time" property="expiresTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="del" property="del" jdbcType="SMALLINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
<sql id ="Base_Column_List">
    id, user_id, tx_hash,addr,pay_coin_type, pay_coin_nums, pay_ted_nums, reward_coin_type, reward_coin_nums,
    earning_rate,reward_status,reward_time, expires_time,create_time,update_time,del,remark
  </sql>

  <insert id="insert" parameterType="com.ted.resonance.entity.CaCollarCouponsBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ca_collar_coupons (id, draw_id,user_id, tx_hash,
      addr, pay_coin_type, pay_coin_nums,
      pay_ted_nums, reward_coin_type, reward_coin_nums,
      earning_rate, reward_status, reward_time,
      expires_time, create_time, update_time,
      del, remark)
    values (#{id,jdbcType=BIGINT}, #{drawId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{txHash,jdbcType=VARCHAR},
      #{addr,jdbcType=VARCHAR}, #{payCoinType,jdbcType=VARCHAR}, #{payCoinNums,jdbcType=DECIMAL},
      #{payTedNums,jdbcType=DECIMAL}, #{rewardCoinType,jdbcType=VARCHAR}, #{rewardCoinNums,jdbcType=DECIMAL},
      #{earningRate,jdbcType=DECIMAL}, #{rewardStatus,jdbcType=CHAR}, #{rewardTime,jdbcType=TIMESTAMP},
      #{expiresTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{del,jdbcType=SMALLINT}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ted.resonance.entity.CaCollarCouponsBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ca_collar_coupons
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="drawId != null">
        draw_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="txHash != null" >
        tx_hash,
      </if>
      <if test="addr != null" >
        addr,
      </if>
      <if test="payCoinType != null" >
        pay_coin_type,
      </if>
      <if test="payCoinNums != null" >
        pay_coin_nums,
      </if>
      <if test="payTedNums != null" >
        pay_ted_nums,
      </if>
      <if test="rewardCoinType != null" >
        reward_coin_type,
      </if>
      <if test="rewardCoinNums != null" >
        reward_coin_nums,
      </if>
      <if test="earningRate != null" >
        earning_rate,
      </if>
      <if test="rewardStatus != null" >
        reward_status,
      </if>
      <if test="rewardTime != null" >
        reward_time,
      </if>
      <if test="expiresTime != null" >
        expires_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="del != null" >
        del,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="drawId != null">
        #{drawId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="txHash != null" >
        #{txHash,jdbcType=VARCHAR},
      </if>
      <if test="addr != null" >
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="payCoinType != null" >
        #{payCoinType,jdbcType=VARCHAR},
      </if>
      <if test="payCoinNums != null" >
        #{payCoinNums,jdbcType=DECIMAL},
      </if>
      <if test="payTedNums != null" >
        #{payTedNums,jdbcType=DECIMAL},
      </if>
      <if test="rewardCoinType != null" >
        #{rewardCoinType,jdbcType=VARCHAR},
      </if>
      <if test="rewardCoinNums != null" >
        #{rewardCoinNums,jdbcType=DECIMAL},
      </if>
      <if test="earningRate != null" >
        #{earningRate,jdbcType=DECIMAL},
      </if>
      <if test="rewardStatus != null" >
        #{rewardStatus,jdbcType=CHAR},
      </if>
      <if test="rewardTime != null" >
        #{rewardTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiresTime != null" >
        #{expiresTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="del != null" >
        #{del,jdbcType=SMALLINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

    <select id="findCaCollarCouponsByUserId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from ca_collar_coupons
    where del=0 and reward_status =1
     <if test="addr != null">
      and addr = #{addr,jdbcType=VARCHAR}
     </if>
     limit 1
  </select>

  <select id="findCouponsById" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from ca_collar_coupons
    where del=0 and reward_status =2
    and expires_time >= now()
    <if test="id != null">
      and id =#{id,jdbcType=BIGINT}
    </if>
  </select>

  <select id="couponsList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from ca_collar_coupons
    where del=0
    <if test="addr != null">
      and addr = #{addr,jdbcType=VARCHAR}
    </if>
  </select>

  <update id="updateRewardStatus">
    update ca_collar_coupons
     set
        reward_status=#{rewardStatus,jdbcType=CHAR} ,
        <if test="rewardTime != null">
          reward_time = #{rewardTime,jdbcType=TIMESTAMP},
        </if>
        <if test="expiresTime != null">
          expires_time = #{expiresTime,jdbcType=TIMESTAMP}
        </if>
     where id = #{id,jdbcType=BIGINT}
       and del=0
  </update>

  <update id="updateRewardStatusJob">
    update ca_collar_coupons
    set
    reward_status=5
    where reward_status in (1,2)
    and now() >= expires_time
  </update>

  <insert id="batchSaveOrUpdate">
        insert into ca_collar_coupons (draw_id, user_id, tx_hash,
        addr, pay_coin_type, pay_coin_nums,
        pay_ted_nums, reward_coin_type, reward_coin_nums,
        earning_rate, reward_status, reward_time,
        expires_time, create_time, update_time,
        del, remark)
        values
        <foreach collection="list" separator="," item="item">
            (#{item.drawId,jdbcType=VARCHAR}, #{item.userId,jdbcType=VARCHAR}, #{item.txHash,jdbcType=VARCHAR},
            #{item.addr,jdbcType=VARCHAR}, #{item.payCoinType,jdbcType=VARCHAR}, #{item.payCoinNums,jdbcType=DECIMAL},
            #{item.payTedNums,jdbcType=DECIMAL}, #{item.rewardCoinType,jdbcType=VARCHAR},
            #{item.rewardCoinNums,jdbcType=DECIMAL},
            #{item.earningRate,jdbcType=DECIMAL}, #{item.rewardStatus,jdbcType=CHAR},
            #{item.rewardTime,jdbcType=TIMESTAMP},
            #{item.expiresTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.del,jdbcType=SMALLINT}, #{item.remark,jdbcType=VARCHAR})
        </foreach>
        ON DUPLICATE KEY
        UPDATE update_time = values(update_time)
    </insert>


  <select id="selectCouponsByRewardStatus" resultMap="BaseResultMap" >
    select <include refid="Base_Column_List"/>
    from ca_collar_coupons
    where 1=1
    and reward_status = #{rewardStatus,jdbcType=VARCHAR}
    and del = 0
    order by id asc
  </select>

  <select id="selectById" resultMap="BaseResultMap" >
    select <include refid="Base_Column_List"/>
    from ca_collar_coupons
    where 1=1
     id = #{id,jdbcType=BIGINT}
  </select>

  <update id="updateDelStatusById">
      update ca_collar_coupons
      set del = 1,
       update_time = CURRENT_TIMESTAMP
      where id = #{id}
  </update>

  <update id="updateRewardStatusById">
      update ca_collar_coupons
      set reward_status = #{rewardStatus,jdbcType=VARCHAR},
       update_time = CURRENT_TIMESTAMP
      where id = #{id}
  </update>
</mapper>