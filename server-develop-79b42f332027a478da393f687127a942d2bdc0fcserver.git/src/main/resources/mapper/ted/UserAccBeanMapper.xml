<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ted.resonance.mapper.UserAccBeanMapper">
    <resultMap id="BaseResultMap" type="com.ted.resonance.entity.UserAccBean">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="addr" jdbcType="VARCHAR" property="addr"/>
        <result column="coin_type" jdbcType="VARCHAR" property="coinType"/>
        <result column="balance" jdbcType="DECIMAL" property="balance"/>
        <result column="frozen_amount" jdbcType="DECIMAL" property="frozenAmount"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_deleted" jdbcType="BIT" property="isDeleted"/>
    </resultMap>

    <sql id="Base_Column_List">
    id,user_id,addr,coin_type,balance,frozen_amount,create_time,update_time,is_deleted
  </sql>
    <insert id="insert" parameterType="com.ted.resonance.entity.UserAccBean" useGeneratedKeys="true"
            keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into user_acc (id, user_id,addr,coin_type,
        balance, frozen_amount, create_time,
        update_time, is_deleted)
        values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{addr,jdbcType=VARCHAR},
        #{coinType,jdbcType=VARCHAR},
        #{balance,jdbcType=DECIMAL}, #{frozenAmount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.ted.resonance.entity.UserAccBean" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into user_acc
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="addr != null">
                addr,
            </if>
            <if test="coinType != null">
                coin_type,
            </if>
            <if test="balance != null">
                balance,
            </if>
            <if test="frozenAmount != null">
                frozen_amount,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="addr != null">
                #{addr,jdbcType=VARCHAR},
            </if>
            <if test="coinType != null">
                #{coinType,jdbcType=VARCHAR},
            </if>
            <if test="balance != null">
                #{balance,jdbcType=DECIMAL},
            </if>
            <if test="frozenAmount != null">
                #{frozenAmount,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=BIT},
            </if>
        </trim>
    </insert>

    <select id="selectByAddrAndCoinType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_acc
        where 1=1
        and addr = #{addr,jdbcType=VARCHAR}
        and coin_type = #{coinType,jdbcType=VARCHAR}
    </select>

    <select id="selectBalances" resultMap="BaseResultMap"
            resultType="com.ted.resonance.entity.response.BalanceResponse">
        select
        <include refid="Base_Column_List"/>
        from user_acc
        where is_deleted = 0
        and addr = #{addr,jdbcType=VARCHAR}
        <if test="coinType != null">
            and coin_type = #{coinType,jdbcType=VARCHAR}
        </if>
    </select>

    <update id="updateAddBalanceById">
        update user_acc
        set
        balance = balance + #{tradeAmount,jdbcType=DECIMAL}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByUserIdAndCoin" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_acc
        where 1=1
        and user_id = #{userId,jdbcType=BIGINT}
        and coin_type = #{coinType,jdbcType=VARCHAR}
        and is_deleted =0
    </select>

    <update id="forzenBalanceById">
        update user_acc
        set
        frozen_amount = frozen_amount + #{tradeAmount,jdbcType=DECIMAL},
        balance = balance - #{tradeAmount,jdbcType=DECIMAL}
        where id = #{id,jdbcType=BIGINT}
        and balance - #{tradeAmount,jdbcType=DECIMAL} >=0
    </update>

    <update id="addUserBalanceById">
        update user_acc
        set
        frozen_amount = frozen_amount - #{tradeAmount,jdbcType=DECIMAL},
        balance = balance + #{tradeAmount,jdbcType=DECIMAL}
        where id = #{id,jdbcType=BIGINT}
        and frozen_amount - #{tradeAmount,jdbcType=DECIMAL} >=0
    </update>
</mapper>